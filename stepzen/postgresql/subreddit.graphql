type Subreddit {
  id: ID!
  name: String!
  topic_ids: [String]!
  subType: String!
  member: ID
  created_at: DateTime!
  coverUrl: String
  description: String
  headline: String
  isChildrenContent: Boolean!
  post(offset: Int, limit: Int): [Post]
    @materializer(
      query: "postUsingPost_subreddit_id_fkey"
      arguments: [{ name: "subreddit_id", field: "id" }, { name: "offset", argument: "offset" }, { name: "limit", argument: "limit" }]
    )
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  postUsingPost_subreddit_id_fkey(subreddit_id: ID!, offset: Int, limit: Int): [Post]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT
        p."body",
        p."created_at",
        p."id",
        p."images",
        p."subreddit_id",
        p."title",
        p."user_id",
        p."link",
        p."linkDescription",
        COALESCE("subquery"."totalUpvotes", 0) AS "totalUpvotes"
      FROM "post" "p"
      LEFT JOIN (
        SELECT
          "post_id",
          SUM(CASE WHEN "upvote" = true THEN 1 ELSE -1 END) AS "totalUpvotes"
        FROM "vote"
        GROUP BY "post_id"
      ) AS "subquery"
      ON "p"."id" = "subquery"."post_id"
      WHERE "subreddit_id" = $1
      ORDER BY "created_at" DESC
      LIMIT $3 OFFSET $2;
      """
      configuration: "postgresql_config"
    )
  " Queries for type 'Subreddit' "
  subreddit(id: ID!): Subreddit @dbquery(type: "postgresql", schema: "public", table: "subreddit", configuration: "postgresql_config")
  subredditByNameWithPosts(name: String!): Subreddit
    @dbquery(type: "postgresql", schema: "public", table: "subreddit", configuration: "postgresql_config")
  subredditByName(name: String!): Subreddit
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "id", "name", "topic_ids", "subType", "member", "created_at", "coverUrl","description", "headline",  "isChildrenContent"  FROM "subreddit" WHERE "name" = $1
      """
      configuration: "postgresql_config"
    )
  subredditList: [Subreddit] @dbquery(type: "postgresql", schema: "public", table: "subreddit", configuration: "postgresql_config")
  subredditPaginatedList(first: Int, after: Int): [Subreddit]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "coverUrl", "created_at", "description", "headline", "id", "isChildrenContent", "member", "name", "subType" FROM "subreddit" ORDER BY "id" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
  subredditUsingPost_subreddit_id_fkey(subreddit_id: ID!): Subreddit
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "coverUrl", "created_at", "description", "headline", "id", "isChildrenContent", "member", "name", "subType" FROM "subreddit" WHERE "id" = $1
      """
      configuration: "postgresql_config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'Subreddit' "
  deleteSubreddit(id: ID!): Subreddit
    @dbquery(type: "postgresql", schema: "public", table: "subreddit", dml: DELETE, configuration: "postgresql_config")
  insertSubreddit(name: String!, subType: String!, topic_ids: [String]!, isChildrenContent: Boolean!): Subreddit
    @dbquery(type: "postgresql", schema: "public", table: "subreddit", dml: INSERT, configuration: "postgresql_config")
  updateSubreddit(
    id: ID!
    coverUrl: String
    description: String
    headline: String
    isChildrenContent: Boolean
    member: ID
    name: String
    subType: String
    topic_ids: [String]
  ): Subreddit
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      UPDATE "subreddit" SET
        "coverUrl" = COALESCE($2, "coverUrl"),
        "created_at" = COALESCE($3, "created_at"),
        "description" = COALESCE($4, "description"),
        "headline" = COALESCE($5, "headline"),
        "isChildrenContent" = COALESCE($6, "isChildrenContent"),
        "member" = COALESCE($7, "member"),
        "name" = COALESCE($8, "name"),
        "subType" = COALESCE($9, "subType")
      WHERE
        "id" = $1
      RETURNING *
      """
      configuration: "postgresql_config"
    )
}
