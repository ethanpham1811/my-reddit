type Comment {
  created_at: DateTime!
  id: ID!
  post: Post @materializer(query: "postUsingComment_post_id_fkey")
  post_id: ID
  text: String
  user: User @materializer(query: "userUsingComment_user_id_fkey")
  user_id: ID!
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  " Queries for type 'Comment' "
  comment(id: ID!): Comment @dbquery(type: "postgresql", schema: "public", table: "comment", configuration: "postgresql_config")
  commentList: [Comment] @dbquery(type: "postgresql", schema: "public", table: "comment", configuration: "postgresql_config")
  commentPaginatedList(first: Int, after: Int): [Comment]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "created_at", "id", "post_id", "text", "user_id" FROM "comment" ORDER BY "id" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
  commentUsingComment_post_id_fkey(id: ID!): [Comment]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "created_at", "id", "post_id", "text", "user_id" FROM "comment" WHERE "post_id" = $1
      """
      configuration: "postgresql_config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'Comment' "
  deleteComment(id: ID!): Comment @dbquery(type: "postgresql", schema: "public", table: "comment", dml: DELETE, configuration: "postgresql_config")
  deleteCommentsOfPost(post_id: ID!): [Comment]
    @dbquery(type: "postgresql", schema: "public", table: "comment", dml: DELETE, configuration: "postgresql_config")
  insertComment(user_id: ID!, post_id: ID!, text: String!): Comment
    @dbquery(type: "postgresql", schema: "public", table: "comment", dml: INSERT, configuration: "postgresql_config")
  updateComment(id: ID!, text: String!): Comment
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      UPDATE "comment" SET
        "text" = COALESCE($2, "text")
      WHERE
        "id" = $1
      RETURNING *
      """
      configuration: "postgresql_config"
    )
}
